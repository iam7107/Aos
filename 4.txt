
//Write a c program to find whether a given file is present in current directory or not

#include <stdio.h>

int main() {
    char filename[100];
    FILE *file;

    printf("Enter the file name: ");
    scanf("%s", filename);

    file = fopen(filename, "r");

    if (file != NULL) {
        printf("File '%s' is present in the current directory.\n", filename);
        fclose(file); 
    } else {
        printf("File '%s' is not present in the current directory.\n", filename);
    }

    return 0;
}






/*Q2 Write a C program which creates a child process and child process catches a signal SIGHUP,
SIGINT and SIGQUIT. The Parent process send a SIGHUP or SIGINT signal after every 3
seconds, at the end of 15 second parent send SIGQUIT signal to child and child terminates by
displaying message My Papa has Killed me!*/

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <sys/wait.h>

void childSignalHandler(int signum) {
    if (signum == SIGHUP) {
        printf("Child: Received SIGHUP\n");
    } 
    else if (signum == SIGINT) {
        printf("Child: Received SIGINT\n");
    } 
    else if (signum == SIGQUIT) {
        printf("Child: Received SIGQUIT\n");
        printf("My Papa has Killed me!!!\n");
        exit(0);
    }
}

int main() {
    pid_t child_pid;
    child_pid = fork();

    if (child_pid == -1) {
        perror("Fork Failed");
        exit(1);
    } 
    else if (child_pid == 0) {
        
        signal(SIGHUP, childSignalHandler);
        signal(SIGINT, childSignalHandler);
        signal(SIGQUIT, childSignalHandler);

      
        while (1) {
            sleep(1);
        }
    } 
    else {
    	int i;
        for ( i = 1; i <= 15; i++) {
            if (i % 3 == 0) {
               
                kill(child_pid, (i <= 9) ? SIGHUP : SIGINT);
            }
            sleep(1);
        }

      
        kill(child_pid, SIGQUIT);
        wait(NULL); 
        printf("Parent: Child process terminated.\n");
    }

    return 0;
}