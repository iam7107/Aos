/*Q1 Display all the files from current directory whose size is greater than n Bytes Where n is accept from user . */

#include <stdio.h>
#include <dirent.h>
#include <sys/stat.h>
#include <string.h>
#include <stdlib.h>

int main() {
    char *directory = ".";  
    int n;
    

    printf("Enter the size threshold in bytes: ");
    scanf("%d", &n);


    DIR *dir = opendir(directory);
    if (dir == NULL) {
        perror("Unable to open directory");
        return 1;
    }

    struct dirent *entry;
    struct stat fileStat;
    char filepath[512];

    printf("Files larger than %d bytes:\n", n);
    

    while ((entry = readdir(dir)) != NULL) {

        if (strcmp(entry->d_name, ".") == 0 || strcmp(entry->d_name, "..") == 0) {
            continue;
        }


        snprintf(filepath, sizeof(filepath), "%s/%s", directory, entry->d_name);


        if (stat(filepath, &fileStat) == 0) {

            if (S_ISREG(fileStat.st_mode) && fileStat.st_size > n) {
                printf("%s (%lld bytes)\n", entry->d_name, (long long)fileStat.st_size);
            }
        } else {
            perror("stat");
        }
    }


    closedir(dir);

    return 0;
}







/*Q2 Write a C program to find file properties such as inode number, number of hard link, File
permissions, File size, File access and modification time and so on of a given file using stat()
system call.*/

#include<stdio.h>
#include<unistd.h>
#include<dirent.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<sys/wait.h>

int main(int argc, char*argv[])
{
	struct stat info;
	
	if(argc != 2)
	{
		printf("Enter a file name");
		scanf("%s", argv[1]);
	}
	
	if(stat(argv[1], &info) == -1)
	{
		printf("stat error\n");
		exit(0);
	}
	
	printf("inode number = %d\n", info.st_ino);
	printf("size = %d", (long)info.st_size);
	printf("last file access = %s\n", ctime(&info.st_atime));
	printf("notification time = %s\n", ctime(&info.st_mtime));
	printf("Number of Hardlink(s) = %d\n", info.st_nlink);
	printf("File Permissions : ");
	printf((info.st_mode && S_IRUSR)?"r":"-");
	printf((info.st_mode && S_IWUSR)?"w":"-");
	printf((info.st_mode && S_IXUSR)?"x":"-");
	
	return 0;
}
