// Q1 Write a C program that illustrates suspending and resuming processes using signals.

#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<signal.h>

void childProcess() {
    while (1) {
        printf("Child process is running...\n");
        sleep(1);
    }
}

int main() {
    pid_t child_pid;

    child_pid = fork();

    if (child_pid < 0) {
        perror("Fork Failed");
        exit(1);
    }

    if (child_pid == 0) {
        
        childProcess();
    } else {

        printf("Parent created child process with PID: %d\n", child_pid);

        sleep(2);

        printf("Suspending the child process...\n");
        kill(child_pid, SIGSTOP);

        sleep(2);

        printf("Resuming the child process...\n");
        kill(child_pid, SIGCONT);

        sleep(2);

        printf("Terminating the child process...\n");
        kill(child_pid, SIGTERM);
    }

    return 0;
}










/*Q2 Write a C program to Identify the type (Directory, character device, Block device, Regular file,
FIFO or pipe, symbolic link or socket) of given file using stat() system call.*/

#include<stdio.h>
#include<string.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<unistd.h>

int main()
{
	int fd;
	char  *myfifo = "/tmp/myfifo"; 
	mkfifo(myfifo,0666);    
	char arr1[80],arr2[80];
	while(1);
	{
		fd = open(myfifo,O_WRONLY);
		
		fgets(arr2,80,stdin);
		
		write(fd,arr2,strlen(arr2)+1);
		close(fd);

		fd = open(myfifo,O_RDONLY)
	}
} 

